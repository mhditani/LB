// <auto-generated />
using System;
using Entities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(LbDbContext))]
    [Migration("20250720090323_Seeding data for Difficulties & Regions")]
    partial class SeedingdataforDifficultiesRegions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c97267f-ec7d-40c5-b814-51321515c661"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("8efd4ac3-7549-4f14-91b8-c4153e728882"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("e6a6d27d-4e98-41ea-85c5-3f509eb0ed77"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("Entities.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000001"),
                            Code = "BEY",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/5/53/Beirut_Central_District.jpg",
                            Name = "Beirut"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000002"),
                            Code = "MLB",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/31/Bekish_monastery_001.jpg",
                            Name = "Mount Lebanon"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000003"),
                            Code = "NLB",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/d/d7/Ehden_View.jpg",
                            Name = "North Lebanon"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000004"),
                            Code = "AKK",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/8/88/Akkar_Lebanon_village_landscape.jpg",
                            Name = "Akkar"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000005"),
                            Code = "BEK",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/4/4b/Zahle_Bekaa_Valley_Lebanon_2009.jpg",
                            Name = "Bekaa"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000006"),
                            Code = "BHM",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/3c/Baalbek_Roman_ruins.jpg",
                            Name = "Baalbek-Hermel"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000007"),
                            Code = "SLB",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/33/Tyre_harbor_south_lebanon_2006.jpg",
                            Name = "South Lebanon"
                        },
                        new
                        {
                            Id = new Guid("a1f1c555-1111-4a51-b1a1-000000000008"),
                            Code = "NAB",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/f/f3/Nabatieh_Lebanon_view.jpg",
                            Name = "Nabatieh"
                        });
                });

            modelBuilder.Entity("Entities.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Entities.Domain.Walk", b =>
                {
                    b.HasOne("Entities.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
